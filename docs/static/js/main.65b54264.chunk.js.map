{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","components/store/store.js","reducers/authReducer.js","firebase/firebase-config.js","routers/PrivateRoute.js","routers/PublicRoute.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","todayDate","moment","Date","now","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","message","logout","JournalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","RegisterScreen","password2","isFormVald","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPasswordName","AuthRouter","exact","path","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.65b54264.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n    \n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [\n                    action.payload, ...state.notes\n                ]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n    \n        default:\n            return state;\n    }\n\n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        \n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n        default:\n            return state;\n    }\n\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { auhtReducer } from '../../reducers/authReducer';\nimport { notesReducer } from '../../reducers/notesReducer';\nimport { uiReducer } from '../../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: auhtReducer,\n    ui: uiReducer,\n    notes: notesReducer\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    ));\n","import { types } from \"../types/types\";\n\n\nexport const auhtReducer = ( state = {}, action ) => {\n    \n    switch ( action.type ) {\n        case types.login:\n            return{\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        \n        case types.logout:\n            return{ }\n    \n        default:\n            return state;\n    }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBU-Nm0HWY4L5yB4Y2IUNohCef8tZDcNwA\",\n    authDomain: \"react-journalapp-62bd3.firebaseapp.com\",\n    projectId: \"react-journalapp-62bd3\",\n    storageBucket: \"react-journalapp-62bd3.appspot.com\",\n    messagingSenderId: \"709072180493\",\n    appId: \"1:709072180493:web:93215d6b15033fe9ab4c44\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/react-journal-app-jesus/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','journal-app');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        throw error;\n    }\n}\n","import { db } from \"../firebase/firebase-config\"\n\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes= [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n\n    return notes;\n}\n","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const startLoadNotes = ( uid ) => {\n    return async(dispatch) => {\n\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !note.url ) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note }\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved', note.title, 'success');\n\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading!',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ) );\n\n        Swal.close();\n\n    }\n}\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote( id ) );\n\n    }\n}\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const logoutNote = () => ({\n    type: types.notesLogoutCleaning\n});\n","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const todayDate = moment( Date.now() );\n\n    const handleSave = () => {\n        dispatch( startSaveNote( active ) );\n    }\n\n    const handlePictureUpload = () => {\n        document.querySelector( '#fileSelector' ).click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        dispatch( startUploading( file ) );\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n\n            <span>{ todayDate.format('LL') }</span>\n\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={ handlePictureUpload }\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n            \n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector(state => state.notes);\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { title, body } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n        \n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch( startDeleting( activeId.current ) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n            \n            <div className=\"notes__content\">\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name='title'\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happend today?\"\n                    className=\"notes__textarea\"\n                    name='body'\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    (note.url)\n                    && (\n                        <div className=\"notes__image\">\n                            <img\n                                src={ note.url }\n                                alt=\"imag\"\n                            />\n                        </div>\n                    )\n                }\n\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                or create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x m-5\"></i>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError,\n    payload: null\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nimport { logoutNote } from './notes';\nimport { finishLoading, startLoading } from './ui';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return(dispatch) => {\n\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                console.log(e);\n                dispatch( finishLoading() );\n\n                Swal.fire('Error', e.message, 'error');\n            });\n\n    }\n}\n\nexport const startRegisterEmailPasswordName = ( email, password, name ) => {\n    return(dispatch) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            })\n            .catch( e => {\n                console.log(e);\n                Swal.fire('Error', e.message, 'error');\n            });\n\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return(dispatch) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            });\n\n    }\n}\n\nexport const login = ( uid, displayName ) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( logoutNote() );\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, title, body, date, url }) => {\n\n    const dispatch = useDispatch();\n    const noteDate = moment(date);\n\n    const handleEntryClick = () => {\n        dispatch( activeNote( id, {\n            title, body, date, url\n        }) \n        );\n    }\n\n    return (\n        <div\n            className=\"journal__entry pointer animate__animated animate__fadeInDown animate__faster\"\n            onClick={ handleEntryClick }\n        >\n\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__entries\">\n\n            {\n                notes.map( note => (\n                    <JournalEntry\n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-container animate__animated animate__fadeIn animate__faster\">\n            \n            <Sidebar />\n\n            <main>\n\n                {\n                    ( active )\n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n                \n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui);\n\n    const [ formValues, handleInputChange ] = useForm({});\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch( startGoogleLogin() );\n    }\n    \n    return (\n        <>\n            <h3 className=\"auth__tittle\">Login</h3>\n\n            <form\n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social network</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n    const [ formValues, handleInputChange ] = useForm();\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormVald() ) {\n            dispatch( startRegisterEmailPasswordName( email, password, name ) );\n        }\n    };\n\n    const isFormVald = () => {\n\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') );\n            return false;\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') );\n            return false;\n        } else if ( password !== password2 ) {\n            dispatch( setError('Passwords do not match') );\n            return false;\n        } else if ( password < 6 ) {\n            dispatch( setError('Password must contain at least 6 characters') );\n            return false;\n        }\n\n        dispatch( removeError() );\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__tittle\">Register</h3>\n\n            <form\n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n                \n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n                {/* <div className=\"auth__social-networks\">\n                    <p>Login with social network</p>\n\n                    <div \n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div> */}\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route\n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\"/>\n\n                </Switch>\n\n            </div>\n            \n        </div>\n    )\n}\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { login } from '../actions/auth';\nimport { startLoadNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async(user) => {\n            \n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn(true);\n                dispatch( startLoadNotes( user.uid ) );\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n            \n        });\n        \n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n    if ( checking ) {\n        return (\n            <h1>Wait...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <Redirect to=\"/auth\"/>\n                </Switch>\n            </div>\n            \n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './components/store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store = { store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}